<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://darktea.github.io/</id><title>Darktea</title><subtitle>Linux, Rust </subtitle> <updated>2024-04-09T19:48:15+08:00</updated> <author> <name>darktea</name> <uri>https://darktea.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://darktea.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://darktea.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 darktea </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>右值引用</title><link href="https://darktea.github.io/posts/right/" rel="alternate" type="text/html" title="右值引用" /><published>2023-03-24T00:00:00+08:00</published> <updated>2023-04-04T14:11:49+08:00</updated> <id>https://darktea.github.io/posts/right/</id> <content src="https://darktea.github.io/posts/right/" /> <author> <name>darktea</name> </author> <category term="notes" /> <summary> 按 C++ 标准的发展来梳理出右值引用的概念。但会先复习一下引用的概念。 引用 先复习一下 C++ 中引用的概念： A reference defines an alternative name for an object 引用就是另外一个已经存在的对象的名字的别名 int ival = 1024; // refVal refers to (is another name for) ival int &amp;amp;refVal = ival; // 错: a reference must be initialized int &amp;amp;refVal2; // assigns 2 to the object to which refVal refers, i.e., to ival refVal = 2; // same as ... </summary> </entry> <entry><title>chatbot</title><link href="https://darktea.github.io/posts/chatbot/" rel="alternate" type="text/html" title="chatbot" /><published>2022-12-07T00:00:00+08:00</published> <updated>2023-02-16T09:56:23+08:00</updated> <id>https://darktea.github.io/posts/chatbot/</id> <content src="https://darktea.github.io/posts/chatbot/" /> <author> <name>darktea</name> </author> <category term="notes" /> <summary> 对话型应用 对话型应用也既是 chatbot 的中文翻译。 首先，对话型应用是智能应用，是当今最热门的「机器学习」（AI） 技术的典型应用。 所以，chatbot（对话型应用）是「智能应用」。何谓「智能应用」？如下图所示，通过在训练阶段获得的模型来处理真实的数据： flowchart LR A[[Training data]] --&amp;gt;B(ML argorithm) --&amp;gt;C[[Model]] D[[Real data]] --&amp;gt;E(Model)--&amp;gt;F[[Result]] 具体来说是一种基于 SL 的「智能应用」： SL（Supervised learning）：在一组数据集（输入数据+输出数据，也就是训练数据）之上建立的数学模型。之后可以使用建立的「数学模型」对新输入的数据产出结果数据 例如：「分类模型」（垃圾邮... </summary> </entry> <entry><title>Github Markdown</title><link href="https://darktea.github.io/posts/git-ref/" rel="alternate" type="text/html" title="Github Markdown" /><published>2022-10-24T00:00:00+08:00</published> <updated>2022-10-25T09:39:32+08:00</updated> <id>https://darktea.github.io/posts/git-ref/</id> <content src="https://darktea.github.io/posts/git-ref/" /> <author> <name>darktea</name> </author> <category term="notes" /> <summary> Here’s a tip – if you’re having trouble with your anchor not working due to misspellings or odd characters, simply hover over your heading on Github, then hover or click the link icon that appears to the left. You can then right click to copy the link location, left click it to go to the URL and view it in your address bar, or simply stay hovered over it and view it in the status bar of your... </summary> </entry> <entry><title>DDD Notes</title><link href="https://darktea.github.io/posts/ddd/" rel="alternate" type="text/html" title="DDD Notes" /><published>2022-10-07T00:00:00+08:00</published> <updated>2023-02-16T10:19:19+08:00</updated> <id>https://darktea.github.io/posts/ddd/</id> <content src="https://darktea.github.io/posts/ddd/" /> <author> <name>darktea</name> </author> <category term="notes" /> <summary> Part 1: DDD 总览 DDD 要解决的问题 问题域 问题空间 解空间 Strategic Patterns Tactical Patterns 领域 子域 逻辑概念和物理概念 通用语言 领域模型 限界上下文 模式 Part 2: DDD 原则与实践 DDD Intro 对问题域进行提取 识别核心域 Model Driven Design 领域模型实现模式 Bounded Context 上下文映射 应用架构 DDD 的常见问题 DDD 的实施 ... </summary> </entry> <entry><title>Working on it</title><link href="https://darktea.github.io/posts/working-on-it/" rel="alternate" type="text/html" title="Working on it" /><published>2022-06-25T00:00:00+08:00</published> <updated>2022-07-02T13:20:15+08:00</updated> <id>https://darktea.github.io/posts/working-on-it/</id> <content src="https://darktea.github.io/posts/working-on-it/" /> <author> <name>darktea</name> </author> <category term="notes" /> <summary> 分 2 部分介绍： 「日常需求」的完整工作流程 「线上服务」的运维 一. 流程 前提： 效率相关（相关指标） 故障相关 定义什么是故障 定义故障等级（受影响用户数 + 时长） 设定目标 工作流程包括以下环节： 技术评审 变更管理： 代码分支管理 代码提交卡点：代码规范检测，安全审核，中间件版本检测，CR，单测通过。。。 数据库（或中间件）变更规范 系统变更管理 推进：开发环境 -&amp;gt; 联调环境 -&amp;gt; 测试环境 -&amp;gt; 预发环境 测试：自测 -&amp;gt; 联调 -&amp;gt; QA 测试 -&amp;gt; QA 验证通过 -&amp;gt; 是否压测？ 发布：灰度... </summary> </entry> </feed>
